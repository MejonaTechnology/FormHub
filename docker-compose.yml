version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: formhub
      POSTGRES_USER: formhub
      POSTGRES_PASSWORD: formhub123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U formhub"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FormHub API Backend
  api:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8080:8080"
    environment:
      ENVIRONMENT: development
      PORT: 8080
      DATABASE_URL: postgres://formhub:formhub123@postgres:5432/formhub?sslmode=disable
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-change-in-production
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USERNAME: ${SMTP_USERNAME:-your-email@gmail.com}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-your-app-password}
      FROM_EMAIL: noreply@formhub.com
      FROM_NAME: FormHub
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/root/uploads
    restart: unless-stopped

  # Frontend Dashboard (optional - will be created later)
  # frontend:
  #   build: 
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     NEXT_PUBLIC_API_URL: http://localhost:8080
  #   depends_on:
  #     - api
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data: